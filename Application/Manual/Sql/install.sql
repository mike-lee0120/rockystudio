CREATE TABLE `ly_manual_index` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `uid` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '用户ID',
  `name` varchar(127) NOT NULL DEFAULT '' COMMENT '手册名称',
  `title` varchar(127) NOT NULL DEFAULT '' COMMENT '手册标题',
  `cover` int(11) NOT NULL DEFAULT '0' COMMENT '手册封面',
  `abstract` varchar(255) NOT NULL DEFAULT '' COMMENT '手册简介',
  `content` text NOT NULL COMMENT '手册详细介绍',
  `expanded` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否展开',
  `version` varchar(15) NOT NULL DEFAULT '' COMMENT '版本',
  `parse_type` varchar(15) NOT NULL DEFAULT '' COMMENT '内容解析类型',
  `need_login` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '需要登录阅读',
  `create_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `sort` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '排序',
  `status` int(3) NOT NULL DEFAULT '0' COMMENT '状态',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='手册表';

INSERT INTO `ly_manual` VALUES (1, 1, 'corethink', '零云中文手册1.0', 4438, 'CoreThink 1.0.3简体中文参考手册', '                                                                                                                <h2>\r\n  版权申明\r\n</h2>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n 发布本资料须遵守开放出版许可协议 1.0 或者更新版本。<br />\r\n未经版权所有者明确授权，禁止发行本文档及其被实质上修改的版本。 未经版权所有者事先授权，禁止将此作品及其衍生作品以标准（纸质）书籍形式发行。<br />\r\n如果有兴趣再发行或再版本手册的全部或部分内容，不论修改过与否，或者有任何问题，请联系版权所有者 admin@coretink.cn。<br />\r\n对CoreThink有任何疑问或者建议，请进入官方讨论区 [ <a href=\"/admin/category/edit/id\" target=\"_blank\">http://www.corethink.cn</a> ] 发布相关讨论。<br />\r\n有关<span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:24px;\">CoreThink</span>项目及本文档的最新资料，请及时访问<span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:24px;\">CoreThink</span>项目主站 <a href=\"http://www.thinkphp.cn/\" target=\"_blank\"></a><a href=\"/admin/category/edit/id\" target=\"_blank\">http://www.corethink.cn</a>。<br />\r\n本文档的版权归南京科斯克网络科技有限公司所有，本文档及其描述的内容受有关法律的版权保护，对本文档内容的任何形式的非法复制，泄露或散布，将导致相应的法律责任。\r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n  <br />\r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n  <span style=\"font-size:20px;font-weight:700;line-height:1.1;\">支持我们</span> \r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n  <strong><span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:24px;\">Cor</span><span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:24px;\">eT</span><span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:24px;\">hink</span>一直在致力于简化企业和个人的WEB应用开发，您的支持是我们前进的最大的动力和鼓舞！</strong> \r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n 我们的团队一年来一直在坚持不懈地努力，并坚持开源和免费提供使用，帮助企业、团队、个人更加方便的进行WEB应用的快速开发，如果您对我们的成果表示认同并且觉得对你有所帮助我们愿意接受来自各方面的支持^_^。\r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n 扫描下方二维码支持我们！\r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n  <img src=\"/Uploads/2015-06-05/5571b1349dd77.png\" alt=\"\" width=\"200\" height=\"200\" title=\"\" align=\"\" /><img src=\"/Uploads/2015-07-24/55b1ab70e59b9.jpg\" alt=\"\" width=\"200\" height=\"200\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n <span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:24px;\"><span style=\"font-size:14px;\">支付宝：admin@corethink.cn</span> <span style=\"font-size:12px;\">关注微信公众号（CoreThink）支持我们</span></span> \r\n</p>\r\n<p>\r\n  <br />\r\n</p>                                                                                ', '1.0', 'html', 1440756801, 1472783286, 0, 1);

CREATE TABLE `ly_manual_page` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `pid` int(11) unsigned NOT NULL DEFAULT '0' COMMENT 'PID',
  `mid` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '手册ID',
  `uid` int(11) NOT NULL DEFAULT '0' COMMENT '用户ID',
  `last_uid` int(11) NOT NULL DEFAULT '0' COMMENT '最后编辑用户ID',
  `title` varchar(32) NOT NULL DEFAULT '' COMMENT '标题',
  `content` longtext NOT NULL COMMENT '正文',
  `expanded` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否展开',
  `authority` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '阅读权限',
  `create_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  `sort` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '排序',
  `status` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '状态',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='手册文章信息表';

INSERT INTO `ly_manual_page` VALUES (1, 0, 1, 1, 0, '基础', '', 0, 0, 1433489667, 1433489667, 0, 1);
INSERT INTO `ly_manual_page` VALUES (2, 0, 1, 1, 0, '系统功能', '', 0, 0, 1433489695, 1433489695, 0, 1);
INSERT INTO `ly_manual_page` VALUES (3, 0, 1, 1, 0, '内容功能', '', 0, 0, 1433489716, 1433489716, 0, 1);
INSERT INTO `ly_manual_page` VALUES (4, 0, 1, 1, 0, '用户功能', '', 0, 0, 1433489737, 1433489737, 0, 1);
INSERT INTO `ly_manual_page` VALUES (5, 0, 1, 1, 0, '专题', '', 0, 0, 1433489754, 1433489754, 0, 1);
INSERT INTO `ly_manual_page` VALUES (6, 1, 1, 1, 0, '框架简介', '<p>\r\n  <span style=\"line-height:1.42857143;\">1、简介</span>\r\n</p>\r\n<p>\r\n  CoreThink是一套面向企业、团队和个人的互联网＋解决方案云框架。\r\n</p>\r\n<p>\r\n  系统功能采用模块化开发，内置应用商店；使用CoreThink用户既可以在应用商店中购买如财务、人事、CRM、OA、O2O商城、众筹、家政、小区、微信等模块直接安装使用，也可以在应用商店的模块不能满足需求的情况下，使用CoreThink快速的开发健壮高效的定制WEB产品。\r\n</p>\r\n<p>\r\n  CoreThink致力于搭建一个完善的企业级应用生态环境以适应不同行业用户的需求，第三方开发者可以将自己的功能模块发布到官方的应用商城。\r\n</p>\r\n<p>\r\n CoreThink既可以把某个模块当作一个单独的产品来使用，也可以当作一整套解决方案来使用。形象化讲，CoreThink既可以针对一个模块当作一个软件来使用，也可以当作一套操作系统来使用。\r\n</p>\r\n<p>\r\n 当作单独的产品来使用时CoreThink是一套轻量级WEB产品开发框架，追求简单、高效、卓越。可轻松实现移动互联网时代支持多终端的轻量级WEB产品快速开发。系统功能采用模块化开发，内置系统设置、分类管理、底部导航、数据备份、开发者工具（菜单管理、配置管理、数据字典、开发文档、视频教程）、用户管理、部门管理、权限控制、内容模型、模板标签、模版主题、邮件管理、云存储、支付中心、插件扩展等模块，便于用户灵活扩展和二次开发。\r\n</p>\r\n<p>\r\n 2、架构设计\r\n</p>\r\n<p>\r\n <br />\r\n</p>\r\n<p>\r\n 3、适用范围\r\n</p>\r\n<p>\r\n 1）开发各种互联网WEB产品：\r\n</p>\r\n<p>\r\n  网站、微信、众筹、商城、O2O...\r\n</p>\r\n<p>\r\n 2）企业生产运营实际需求：\r\n</p>\r\n<p>\r\n  CRM系统，OA系统，招聘系统，培训系统……\r\n</p>\r\n<p>\r\n 3）企业增值服务：\r\n</p>\r\n<p>\r\n  会务公司服务时提供微信墙，招聘时提供微信签到……\r\n</p>\r\n<div>\r\n <br />\r\n</div>\r\n<p>\r\n <br />\r\n</p>', 0, 0, 1433498097, 1437707538, 0, 1);
INSERT INTO `ly_manual_page` VALUES (7, 1, 1, 1, 0, '免费下载', '<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n 获取CoreThink的方式很多，官方网站（<a href=\"/admin/category/edit/tab/9/id\" target=\"_blank\">http://www.corethink.cn</a>）是最好的下载和文档获取来源。\r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n  官网提供了稳定版本的下载：<a href=\"/admin/category/edit/tab/9/id\"><span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:24px;\">http://www.corethink.cn</span></a> \r\n</p>\r\n<blockquote style=\"background-color:#F0F7FD;color:#0382AD;font-family:微软雅黑;font-size:16px;\">\r\n  <p>\r\n   官网下载版本为官方发布的正式版本分为两个版本，标准版是完全的代码压缩包，而一键安装版是官方整合了amp的快速部署包。\r\n  </p>\r\n</blockquote>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n 如果你希望保持最新的更新，可以通过github获取当前最新的版本。\r\n</p>\r\n<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n Git获取地址列表（你可以选择一个最快的地址）：\r\n</p>\r\n<blockquote style=\"background-color:#F0F7FD;color:#0382AD;font-family:微软雅黑;font-size:16px;\">\r\n  <p>\r\n   Github：&nbsp;&nbsp;git@github.com:<span style=\"color:#0382AD;font-family:微软雅黑;font-size:16px;line-height:22px;background-color:#F0F7FD;\">corethink</span>/corethink.git<br />\r\nOschina：git@git.oschina.net:jry/corethink.git\r\n  </p>\r\n</blockquote>', 0, 0, 1433502920, 1438760711, 0, 1);
INSERT INTO `ly_manual_page` VALUES (8, 1, 1, 1, 0, '环境要求', '<p style=\"color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n 框架本身没有什么特别模块要求，具体的应用系统运行环境要求视开发所涉及的模块。ThinkPHP底层运行的内存消耗极低，而本身的文件大小也是轻量级的，因此不会出现空间和内存占用的瓶颈。\r\n</p>\r\n<h2 style=\"color:#404040;font-family:微软雅黑;\">\r\n  PHP版本要求\r\n</h2>\r\n<ul style=\"margin-left:0px;color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n <li>\r\n    PHP5.3以上版本（<strong>注意：PHP5.3dev版本和PHP6均不支持</strong>）\r\n  </li>\r\n</ul>\r\n<h2 style=\"color:#404040;font-family:微软雅黑;\">\r\n  支持的服务器和数据库环境\r\n</h2>\r\n<ul style=\"margin-left:0px;color:#404040;font-family:微软雅黑;font-size:16px;\">\r\n  <li>\r\n    支持Windows/Unix服务器环境\r\n </li>\r\n <li>\r\n    可运行于包括Apache、IIS和nginx在内的多种WEB服务器和模式\r\n  </li>\r\n <li>\r\n    支持Mysql、MsSQL、PgSQL、Sqlite、Oracle、Ibase、Mongo以及PDO等多种数据库和连接\r\n </li>\r\n</ul>\r\n<blockquote style=\"background-color:#F0F7FD;color:#0382AD;font-family:微软雅黑;font-size:16px;\">\r\n  <p>\r\n   对于刚刚接触PHP或者ThinkPHP的新手，我们推荐使用集成开发环境<a href=\"http://www.wampserver.com/en\">WAMPServer</a>（wampserver是一个集成了Apache、PHP和MySQL的开发套件，而且支持不同PHP版本、MySQL版本和Apache版本的切换）来使用ThinkPHP进行本地开发和测试。\r\n  </p>\r\n</blockquote>', 0, 0, 1433502961, 1436716803, 0, 1);
INSERT INTO `ly_manual_page` VALUES (9, 1, 1, 1, 0, '安装教程', '<h4 class=\"header ui\" style=\"font-family:Lato, \'Helvetica Neue\', \'Microsoft YaHei\', Arial, Helvetica, sans-serif;\">\r\n  <span style=\"color:#000000;font-size:28px;line-height:1.1;\"> \r\n <h4 class=\"header ui\" style=\"font-family:Lato, \'Helvetica Neue\', \'Microsoft YaHei\', Arial, Helvetica, sans-serif;color:#353535;\">\r\n   <span style=\"color:#000000;font-size:28px;line-height:1.1;\">系统安装</span> \r\n  </h4>\r\n</span> \r\n</h4>\r\n<div class=\"markdown-body\" style=\"font-size:15px;color:rgba(0, 0, 0, 0.8);font-family:Lato, \'Helvetica Neue\', \'Microsoft YaHei\', Arial, Helvetica, sans-serif;\">\r\n  <h3 style=\"font-family:Lato, \'Helvetica Neue\', \'Microsoft YaHei\', Arial, Helvetica, sans-serif;margin-left:0px;font-size:18px;\">\r\n    CoreThink框架支持两种安装模式，第一种标准模式安装属于业内比较通用的安装方式，一路点击下一步即可。第二种开发模式安装适合在Paas平台部署以及开发者在本地调试开发时采用。用户可以结合自己的实际情况进行选择。\r\n </h3>\r\n <h2 style=\"font-family:Lato, \'Helvetica Neue\', \'Microsoft YaHei\', Arial, Helvetica, sans-serif;margin-left:0px;font-size:24px;color:#000000;\">\r\n    1.标准模式安装\r\n  </h2>\r\n <p>\r\n   1）下载CoreThink源代码，解压缩至本地WEB服务器根目录或者上传至虚拟主机/VPS的WEB服务器网站跟目录；\r\n  </p>\r\n  <p>\r\n   2）浏览器访问主机IP或者域名进入安装界面，同意进入下一步系统环境检测；\r\n  </p>\r\n  <p>\r\n   <img alt=\"\" src=\"/Uploads/2015-06-05/557107ed7223f.png\" width=\"800\" height=\"483\" title=\"\" align=\"\" /> \r\n  </p>\r\n  <p>\r\n   3）环境检测如果全部通过则点击下一步进入参数设置，否则请先处理红色✖️的项目；\r\n </p>\r\n  <p>\r\n   <img alt=\"\" src=\"/Uploads/2015-06-05/557107ede5c8e.png\" width=\"800\" height=\"483\" title=\"\" align=\"\" /> \r\n  </p>\r\n  <p>\r\n   4）填写数据库信息、管理员信息，点击下一步开始安装系统，成功后将会提示。\r\n  </p>\r\n  <h2 style=\"font-family:Lato, \'Helvetica Neue\', \'Microsoft YaHei\', Arial, Helvetica, sans-serif;margin-left:0px;font-size:24px;color:#000000;\">\r\n    2.开发模式安装\r\n  </h2>\r\n <p>\r\n   1）请先了解Apache或者Nginx的环境变量配置；\r\n </p>\r\n  <p>\r\n   2）下载CoreThink源代码，解压缩至WEB服务器根目录；\r\n </p>\r\n  <p>\r\n   3）自行将/Application/Install/Data/install.sql数据库文件导入到即将使用的MySQL数据库中；\r\n </p>\r\n  <p>\r\n   4）参数配置\r\n  </p>\r\n  <p>\r\n   如果是本地开发配置Apache参考如下\r\n </p>\r\n  <div class=\"black\">\r\n   <div class=\"highlight\">\r\n<pre>  <virtualhost *:80=\"\">DocumentRoot \"/var/www\"\r\n  ServerName www.corethink.cn\r\n  ErrorLog \"/var/log/apache3/corethink_error_log\"\r\n  CustomLog \"/var/log/apache3/corethink_access_log\" commonOptions Indexes FollowSymLinks MultiViews\r\n  AllowOverride All\r\n  Order deny,allow\r\n  Allow from all\r\n  SetEnv CT_DEV_MODE    true             #开发模式开关开启\r\n  SetEnv CT_DB_HOST       127.0.0.1    #数据库IP地址\r\n  SetEnv CT_DB_NAME      corethink    #数据库名称\r\n  SetEnv CT_DB_USER       root            #数据库用户名\r\n  SetEnv CT_DB_PWD        corethink    #数据库用户密码</pre>\r\n   </div>\r\n  </div>\r\n  <p>\r\n   如果是Paas平台则配置类似下面这样：\r\n </p>\r\n  <p>\r\n   <img alt=\"屏幕快照 2015-03-31 上午12.59.04\" src=\"/Uploads/2015-06-05/557107ee4f7a0.png\" /> \r\n </p>\r\n  <p>\r\n   5）打开首页访问即可完成。\r\n </p>\r\n  <p>\r\n   此部署方式适合于在PaaS平台部署或者本地开发部署，能在进行项目版本控制时保证配置文件不用改变。\r\n  </p>\r\n</div>', 0, 0, 1433509583, 1436716738, 0, 1);
INSERT INTO `ly_manual_page` VALUES (10, 1, 1, 1, 0, '目录结构', '<p>\r\n <span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:27px;\">CoreThink目录结构</span> \r\n</p>\r\n<p>\r\n  <span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:27px;\"> </span> \r\n</p>\r\n<pre class=\"prettyprint lang-js\">├─index.php 入口文件\r\n│\r\n├─Addons 插件目录\r\n├─Application 应用模块目录\r\n│  ├─Admin 后台模块\r\n│  │  ├─Conf 后台配置文件目录\r\n│  │  ├─Common 后台函数公共目录\r\n│  │  ├─Controller 后台控制器目录\r\n│  │  ├─Model 后台模型目录\r\n│  │  └─View 后台视图文件目录\r\n│  │\r\n│  ├─Common 公共模块目录（不能直接访问）\r\n│  │  ├─Conf 公共配置文件目录\r\n│  │  ├─Common 公共函数文件目录\r\n│  │  ├─Controller 模块访问控制器目录\r\n│  │  └─Model 公共模型目录\r\n│  │\r\n│  └─Home Home 前台模块\r\n│     ├─Conf 前台配置文件目录\r\n│     ├─Common 前台函数公共目录\r\n│     ├─Controller 前台控制器目录\r\n│     ├─Model 前台模型目录\r\n│     ├─TagLib 前台标签库目录\r\n│     └─View 模块视图文件目录\r\n│\r\n├─Public 应用资源文件目录 \r\n├─Runtime 应用运行时目录\r\n├─ThinkPHP 框架目录\r\n└─Uploads 上传根目录</pre>\r\n<p>\r\n <br />\r\n</p>\r\n<p>\r\n <span style=\"color:#404040;font-family:微软雅黑;font-size:16px;line-height:27px;\">其中框架目录ThinkPHP的结构如下：</span> \r\n</p>\r\n<pre class=\"prettyprint lang-bsh\">├─ThinkPHP 框架系统目录（可以部署在非web目录下面） \r\n│ ├─Common 核心公共函数目录 \r\n│ ├─Conf 核心配置目录  \r\n│ ├─Lang 核心语言包目录 \r\n│ ├─Library 框架类库目录 \r\n│ │ ├─Think 核心Think类库包目录 \r\n│ │ ├─Behavior 行为类库目录 \r\n│ │ ├─Org Org类库包目录 \r\n│ │ ├─Vendor 第三方类库目录 \r\n│ │ ├─ ... 更多类库目录 \r\n│ ├─Mode 框架应用模式目录 \r\n│ ├─Tpl 系统模板目录 \r\n│ ├─LICENSE.txt 框架授权协议文件 \r\n│ ├─logo.png 框架LOGO文件 \r\n│ ├─README.txt 框架README文件 \r\n│ └─index.php 框架入口文件 </pre>\r\n<br />\r\n<blockquote style=\"background-color:#F0F7FD;color:#0382AD;font-family:微软雅黑;font-size:16px;\">\r\n  <p>\r\n   上述应用的目录结构只是默认设置，事实上，在实际部署应用的时候，我们建议除了应用入口文件和Public资源目录外，其他文件都放到非WEB目录下面，具有更好的安全性。\r\n </p>\r\n</blockquote>', 0, 0, 1433509583, 1436716847, 0, 1);
INSERT INTO `ly_manual_page` VALUES (11, 1, 1, 1, 0, '入口文件', '<p>\r\n CoreThink由于采用了ThinkPHP作为开发框架，所以采用TP的单一入口模式进行项目部署和访问，无论完成什么功能，一个应用都有一个统一（但不一定是唯一）的入口。\r\n</p>\r\n<p>\r\n 应该说，所有应用都是从入口文件开始的，并且不同应用的入口文件是类似的。\r\n</p>\r\n<h2>\r\n 入口文件定义\r\n</h2>\r\n<p>\r\n  入口文件主要完成：\r\n</p>\r\n<ul>\r\n <li>\r\n    定义框架路径、项目路径（可选）\r\n </li>\r\n <li>\r\n    定义调试模式和应用模式（可选）\r\n </li>\r\n <li>\r\n    定义系统相关常量（可选）\r\n  </li>\r\n <li>\r\n    载入框架入口文件（必须）\r\n  </li>\r\n</ul>\r\n<p>\r\n 默认情况下，3.2版本的框架已经自带了一个应用入口文件（以及默认的目录结构），内容如下：\r\n</p>\r\n<ol>\r\n  <li>\r\n    define(\'APP_PATH\',\'./Application/\');\r\n  </li>\r\n <li>\r\n    require\'./ThinkPHP/ThinkPHP.php\';\r\n </li>\r\n</ol>\r\n<blockquote>\r\n  <p>\r\n   注意：3.2版本开始无需定义APP_NAME常量\r\n  </p>\r\n</blockquote>\r\n<p>\r\n  如果你改变了项目目录（例如把Application更改为Apps），只需要在入口文件更改APP_PATH常量定义即可：\r\n</p>\r\n<ol>\r\n <li>\r\n    define(\'APP_PATH\',\'./Apps/\');\r\n </li>\r\n <li>\r\n    require\'./ThinkPHP/ThinkPHP.php\';\r\n </li>\r\n</ol>\r\n<blockquote>\r\n  <p>\r\n   注意：APP_PATH的定义支持相对路径和绝对路径，但必须以“/”结束\r\n </p>\r\n</blockquote>\r\n<p>\r\n  如果你调整了框架核心目录的位置或者目录名，只需要这样修改：\r\n</p>\r\n<ol>\r\n <li>\r\n    define(\'APP_PATH\',\'./Application/\');\r\n  </li>\r\n <li>\r\n    require\'./Think/ThinkPHP.php\';\r\n  </li>\r\n</ol>\r\n<p>\r\n 也可以单独定义一个THINK_PATH常量用于引入：\r\n</p>\r\n<ol>\r\n  <li>\r\n    define(\'APP_PATH\',\'./Application/\');\r\n  </li>\r\n <li>\r\n    define(\'THINK_PATH\',realpath(\'../Think\').\'/\');\r\n  </li>\r\n <li>\r\n    requireTHINK_PATH.\'ThinkPHP.php\';\r\n </li>\r\n</ol>\r\n<blockquote>\r\n  <p>\r\n   和APP_PATH一样THINK_PATH路径定义也必须以“/”结尾。<br />\r\n给THINK_PATH和APP_PATH定义绝对路径会提高系统的加载效率。\r\n  </p>\r\n</blockquote>\r\n<h2>\r\n 入口文件中的其他定义\r\n</h2>\r\n<p>\r\n  一般不建议在入口文件中做过多的操作，但可以重新定义一些系统常量，入口文件中支持定义（建议）的一些系统常量包括：\r\n</p>\r\n<table>\r\n  <tbody>\r\n   <tr>\r\n      <th>\r\n        常量\r\n      </th>\r\n     <th>\r\n        描述\r\n      </th>\r\n   </tr>\r\n </tbody>\r\n  <tbody>\r\n   <tr>\r\n      <td>\r\n        THINK_PATH\r\n      </td>\r\n     <td>\r\n        框架目录\r\n      </td>\r\n   </tr>\r\n   <tr>\r\n      <td>\r\n        APP_PATH\r\n      </td>\r\n     <td>\r\n        应用目录\r\n      </td>\r\n   </tr>\r\n   <tr>\r\n      <td>\r\n        RUNTIME_PATH\r\n      </td>\r\n     <td>\r\n        应用运行时目录（可写）\r\n     </td>\r\n   </tr>\r\n   <tr>\r\n      <td>\r\n        APP_DEBUG\r\n     </td>\r\n     <td>\r\n        应用调试模式 （默认为false）\r\n     </td>\r\n   </tr>\r\n   <tr>\r\n      <td>\r\n        STORAGE_TYPE\r\n      </td>\r\n     <td>\r\n        存储类型（默认为File）\r\n     </td>\r\n   </tr>\r\n   <tr>\r\n      <td>\r\n        APP_MODE\r\n      </td>\r\n     <td>\r\n        应用模式（默认为common）\r\n     </td>\r\n   </tr>\r\n </tbody>\r\n</table>\r\n<blockquote>\r\n  <p>\r\n   注意：所有路径常量都必须以“/”结尾\r\n  </p>\r\n</blockquote>\r\n<p>\r\n  例如，我们可以在入口文件中重新定义相关目录并且开启调试模式：\r\n</p>\r\n<ol>\r\n  <li>\r\n    // 定义应用目录\r\n </li>\r\n <li>\r\n    define(\'APP_PATH\',\'./Apps/\');\r\n </li>\r\n <li>\r\n    // 定义运行时目录\r\n  </li>\r\n <li>\r\n    define(\'RUNTIME_PATH\',\'./Runtime/\');\r\n  </li>\r\n <li>\r\n    // 开启调试模式\r\n </li>\r\n <li>\r\n    define(\'APP_DEBUG\',True);\r\n </li>\r\n <li>\r\n    // 更名框架目录名称，并载入框架入口文件\r\n </li>\r\n <li>\r\n    require\'./Think/ThinkPHP.php\';\r\n  </li>\r\n</ol>\r\n<p>\r\n 这样最终的应用目录结构如下：\r\n</p>\r\n<ol>\r\n  <li>\r\n    www  WEB部署目录（或者子目录）\r\n </li>\r\n <li>\r\n    ├─index.php应用入口文件\r\n </li>\r\n <li>\r\n    ├─Apps应用目录\r\n  </li>\r\n <li>\r\n    ├─Public资源文件目录\r\n  </li>\r\n <li>\r\n    ├─Runtime运行时目录\r\n  </li>\r\n <li>\r\n    └─Think框架目录\r\n </li>\r\n</ol>\r\n<blockquote>\r\n  <p>\r\n   入口文件中还可以定义一些系统变量，用于相关的绑定操作（通常用于多个入口的情况），这个会在后面涉及，暂且不提。\r\n  </p>\r\n</blockquote>', 0, 0, 1433509583, 1436716969, 0, 1);
INSERT INTO `ly_manual_page` VALUES (12, 1, 1, 1, 0, '开发规范', '<p style=\"text-align:justify;font-size:14px;font-family:Helvetica;\">\r\n  1、目录规范\r\n</p>\r\n<p style=\"text-align:justify;font-size:10.5px;font-family:\'Times New Roman\';\">\r\n<pre class=\"prettyprint lang-bsh\">├─index.php 入口文件\r\n\r\n│\r\n\r\n├─Addons 插件目录\r\n\r\n├─Application 应用模块目录\r\n\r\n│  ├─Admin 后台模块\r\n\r\n│  │  ├─Conf 后台配置文件目录\r\n\r\n│  │  ├─Common 后台函数公共目录\r\n\r\n│  │  ├─Controller 后台控制器目录\r\n\r\n│  │  ├─Model 后台模型目录\r\n\r\n│  │  └─View 后台视图文件目录\r\n\r\n│  │\r\n\r\n│  ├─Common 公共模块目录（不能直接访问）\r\n\r\n│  │  ├─Behavior行为扩展目录\r\n\r\n│  │  ├─Builder Builde目录\r\n\r\n│  │  ├─Conf 公共配置文件目录\r\n\r\n│  │  ├─Common 公共函数文件目录\r\n\r\n│  │  ├─Controller 模块访问控制器目录\r\n\r\n│  │  └─Model 公共模型目录\r\n\r\n│  │\r\n\r\n│  └─Home Home 前台模块\r\n\r\n│     ├─Conf 前台配置文件目录\r\n\r\n│     ├─Common 前台函数公共目录\r\n\r\n│     ├─Controller 前台控制器目录\r\n\r\n│     ├─Model 前台模型目录\r\n\r\n│     ├─TagLib 前台标签库目录\r\n\r\n│     └─View 模块视图文件目录\r\n\r\n│\r\n\r\n├─Public 应用资源文件目录 \r\n\r\n├─Runtime 应用运行时目录\r\n\r\n├─ThinkPHP 框架目录\r\n\r\n└─Uploads 上传根目录</pre>\r\n</p>\r\n<p style=\"text-align:justify;font-size:14px;font-family:Helvetica;\">\r\n  2、编码规范\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  1）功能没有完成的时候一定要写 (TODO:)\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 2）必须含有功能模块文档、文件注释、方法注释、函数注释、代码块注释，注释内容包括功用，参数，返回值，作者，必要是还有示例。逻辑复杂的代码，关键部分应有注释。\r\n</p>\r\n<p style=\"text-align:justify;font-size:14px;font-family:Helvetica;\">\r\n  3、PHP编码规范\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 类文件命名：同ThinkPHP命名规范\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 方法命名规范：驼峰命名，不能出现下划线\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 类属性规范：类属性和类方法一致,统一使用驼峰\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  函数命名；小写字母加下划线\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 变量命名规范：产品中不涉及到全局变量，局部变量不做强制要求，建议使用下划线\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 后台控制器里给列表赋值的变量都用xx_list, 单一数据读取、保存都用info,其他临时变量 最好不要使用这两个，以免造成冲突。\r\n</p>\r\n<p style=\"text-align:justify;font-size:14px;font-family:Helvetica;\">\r\n 4、前端编码规范\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  1）模板文件相关常量\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  __PUBLIC__ 公共资源文件目录\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n __IMG__ 当前模块图片目录\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  __CSS__ 当前模块CSS目录\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n __JS__ 当前模块JS目录\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 2）模板文件规范\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  所有的模板文件都继承 Public/layout文件，layout模板提供了以下可重载的块。\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  style 用于添加页面样式文件\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  script 用于添加页面JS文件和JS代码\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  sidebar 左边导航区域\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  body 页面内容，后台页面的内容全部放到body块中\r\n</p>\r\n<p style=\"text-align:justify;font-size:14px;font-family:Helvetica;\">\r\n 5、数据库规范\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 1）所有的字段必须添加注释\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 2）字段名小写，多关键字使用下划线分割（关键字尽量全称）\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  3）所有字段不允许 NULL值\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 4）字段长度定义（TODO: 具体常用的长度定义）\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 5）数据表引擎 MyISAM\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  6）所有的表应该都有status 字段来标注数据状态，业务状态请使用其他字段；status字段类型 为带符号的 tinyint（4）\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  -1 已删除\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  0 被禁用\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 1 正常\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  如果还需要其他的数据状态，请先判断该状态的数据是有用的数据还是无意义的数据：有用的数据状态 &gt; 2，无意义的数据状态 &lt; -1。\r\n</p>\r\n<br />', 0, 0, 1433509583, 1437707388, 0, 1);
INSERT INTO `ly_manual_page` VALUES (14, 2, 1, 1, 0, '系统设置', '<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n 在一个产品使用中，必不可少的是各种各样的配置，比如网站的标题、网站的<span>SEO</span>关键字、网站的<span>LOGO</span>等。<span>ThinkPHP</span>框架本身提供了配置文件的形式来集中管理各类配置的需求，在一般情况下（运营者了解<span>ThinkPHP</span>）基本满足需求。然而考虑到现代的产品运营一般属于专业运营，很可能完全不懂技术，这时候对系统就提出了比较高的要求，一个现代的系统应当提供图形化界面以供使用者设置某些参数。<span></span>\r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n 做系统设置有两种方案，一种在后台提供设置界面，用户修改配置后写回<span>ThinkPHP</span>配置文件，第二种也是当前本系统采用的方案，即：在数据库建立一种系统配置表，用户经常需要修改的配置存储到数据表里，当系统接收到访问请求时，首先从数据库读取所有的配置再与配置文件的配置进行合并，接下来再执行正常的事务流程。实际流程如下图：<span></span>\r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n  &nbsp;<img src=\"/Uploads/2015-06-12/5579b145d0ad0.png\" alt=\"\" />\r\n</p>\r\n<p class=\"MsoNormal\" align=\"left\" style=\"text-indent:24pt;\">\r\n  相关实现方案如下：<span></span>\r\n</p>\r\n<p class=\"MsoNormal\" align=\"left\">\r\n  1）修改配置<span></span>\r\n</p>\r\n<p class=\"MsoNormal\" align=\"left\" style=\"text-indent:24pt;\">\r\n 管理员在后台修改网站标题、网站描述、版权信息等配置后提交到系统。系统接收数据后保存到数据库。<span></span>\r\n</p>\r\n<p class=\"MsoNormal\" align=\"left\" style=\"text-align:center;\">\r\n  <img src=\"/Uploads/2015-06-12/5579b159f08f3.png\" alt=\"\" />\r\n</p>\r\n<p class=\"MsoNormal\" align=\"left\" style=\"text-align:left;\">\r\n <p class=\"MsoNormal\" align=\"left\" style=\"text-indent:21pt;\">\r\n<pre class=\"prettyprint lang-js\">/**\r\n     * 获取某个分组的配置参数\r\n     * @author jry &lt;598821125@qq.com&gt;\r\n     */\r\n    public function group($tab = 1){\r\n        //根据分组获取配置\r\n        $map[\'status\'] = array(\'egt\', \'0\'); //禁用和正常状态\r\n        $map[\'group\'] = array(\'eq\', $tab);\r\n        $data_list = D(\'SystemConfig\')-&gt;where($map)-&gt;order(\'id asc\')-&gt;select();\r\n        //构造表单名、解析options\r\n        foreach($data_list as &amp;$data){\r\n            $data[\'name\'] = \'config[\'.$data[\'name\'].\']\';\r\n            $data[\'options\'] = parse_attr($data[\'options\']);\r\n        }\r\n        //使用FormBuilder快速建立表单页面。\r\n        $builder = new \\Common\\Builder\\FormBuilder();\r\n        $builder-&gt;title(\'系统设置\')  //设置页面标题\r\n                -&gt;SetTablist(C(\'CONFIG_GROUP_LIST\')) //设置Tab按钮列表\r\n                -&gt;SetCurrentTab($tab) //设置当前Tab\r\n                -&gt;setUrl(U(\'groupSave\')) //设置表单提交地址\r\n                -&gt;setExtraItems($data_list) //直接设置表单数据\r\n                -&gt;display();\r\n    }\r\n\r\n    /**\r\n     * 批量保存配置\r\n     * @author jry &lt;598821125@qq.com&gt;\r\n     */\r\n    public function groupSave($config){\r\n        if($config &amp;&amp; is_array($config)){\r\n            $config_object = D(\'SystemConfig\');\r\n            foreach ($config as $name =&gt; $value){\r\n                $map = array(\'name\' =&gt; $name);\r\n                $config_object-&gt;where($map)-&gt;setField(\'value\', $value);\r\n            }\r\n        }\r\n        S(\'DB_CONFIG_DATA\',null);\r\n        $this-&gt;success(\'保存成功！\');\r\n    }</pre>\r\n </p>\r\n  <p class=\"MsoNormal\" align=\"left\">\r\n    2）系统获取数据库配置并于本地配置文件合并<span></span>\r\n  </p>\r\n  <p class=\"MsoNormal\" align=\"left\" style=\"text-indent:24pt;\">\r\n    这一步实际上是在<span>AdminController</span>中实现的，是继登录检测、权限检测之后的第三步。\r\n </p>\r\n  <p class=\"MsoNormal\" align=\"left\" style=\"text-indent:24pt;\">\r\n<pre class=\"prettyprint lang-js\">//读取数据库中的配置\r\n    $config = S(\'DB_CONFIG_DATA\');\r\n    if(!$config){\r\n        $config = D(\'SystemConfig\')-&gt;lists();\r\n        $config[\'DEFAULT_THEME\'] = \'\'; //后台无模板主题\r\n        S(\'DB_CONFIG_DATA\',$config);\r\n    }\r\n    C($config); //添加配置</pre>\r\n  </p>\r\n</p>', 0, 0, 1433509583, 1434039081, 0, 1);
INSERT INTO `ly_manual_page` VALUES (15, 2, 1, 1, 0, '文档类型', '<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n 文档类型（文档模型）是许多<span>CMS</span>系统都包含的一个功能，比如织梦<span>CMS</span>就是典型的带有文档模型的<span>CMS</span>系统。本系统作为一套解决方案自然需要一套文档类型解决方案，实现了文档类型，之后开发者在使用本系统进行开发时便可以方便的建立各种类型的文档，比如：文章、帖子、手册、商品、书籍、项目等等。<span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n 本系统实现思路如下：不管是文章、帖子都有一些共同的基本属性比如标题、创建时间、修改时间、排序、状态等。本系统把这些公共属性抽象出来建立一张文档基础信息表<span>ct_document,</span>接着每个文档类型对应一个扩展信息表，比如文章类型对应数据表<span>ct_document_extend_article</span>，商品类型对应<span>ct_document_extend_shop</span>，而<span>ct_document_type</span>则用来存储所有的文档类型。扩展信息表里保存了不同文档类型不同的信息，比如文章类型扩展表里保存了文章正文、简介、封面等，商品类型扩展表里则保存了商品的价格、库存、商品详情、商品图片等。<span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n 为了能针对不同的文档类型，后台管理数据的时候能根据字段自动构造表单，本系统设计了另一张数据<span>ct_document_attribute</span>用来存储文档类型的字段信息，无论是新建还是编辑都会根据该表进行表单生成。<span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n  以文章类型为例，新建文章类型时，系统读取<span>doc_type</span>为<span>0</span>和<span>3</span>的字段，其中<span>0</span>代表公共字段比如文档所属分类，<span>3</span>代表文章类型的扩展字段。<span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n 本系统文档类型实现方案如下（以项目类型为例）：<span></span> \r\n</p>\r\n<p class=\"MsoNormal\">\r\n  1）新建项目类型<span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-align:center;\">\r\n  <img src=\"/Uploads/2015-06-12/5579b3878e9c2.png\" alt=\"\" /> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-align:left;\">\r\n 相关代码如下：\r\n</p>\r\n<pre class=\"prettyprint lang-php\">    /**\r\n     * 新增类型\r\n     * @author jry &lt;598821125@qq.com&gt;\r\n     */\r\n    public function add(){\r\n        if(IS_POST){\r\n            $document_type_object = D(\'DocumentType\');\r\n            $data = $document_type_object-&gt;create();\r\n            if($data){\r\n                $id = $document_type_object-&gt;add();\r\n                if($id){\r\n                    $this-&gt;success(\'新增成功\', U(\'index\'));\r\n                }else{\r\n                    $this-&gt;error(\'新增失败\');\r\n                }\r\n            }else{\r\n                $this-&gt;error($document_type_object-&gt;getError());\r\n            }\r\n        }else{\r\n            //使用FormBuilder快速建立表单页面。\r\n            $builder = new \\Common\\Builder\\FormBuilder();\r\n            $builder-&gt;title(\'新增类型\')  //设置页面标题\r\n                    -&gt;setUrl(U(\'add\')) //设置表单提交地址\r\n                    -&gt;addItem(\'name\', \'text\', \'类型名称\', \'类型名称\')\r\n                    -&gt;addItem(\'title\', \'text\', \'类型标题\', \'类型标题\')\r\n                    -&gt;addItem(\'icon\', \'icon\', \'图标\', \'类型图标\')\r\n                    -&gt;addItem(\'sort\', \'num\', \'排序\', \'用于显示的顺序\')\r\n                    -&gt;display();\r\n        }\r\n    }</pre>\r\n<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n 2）为项目类型添加字段<span></span> \r\n</p>\r\n<div style=\"text-align:center;\">\r\n <img src=\"/Uploads/2015-06-12/5579b4901adb6.png\" alt=\"\" />\r\n</div>\r\n<p>\r\n <br />\r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-align:left;\">\r\n  <br />\r\n</p>\r\n<p class=\"MsoNormal\">\r\n 3）为项目类型字段排序<span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:24.0pt;\">\r\n  字段排序将为项目文档管理时提供表单生成的排序。<span></span> \r\n</p>\r\n<div style=\"text-align:center;\">\r\n <img src=\"/Uploads/2015-06-12/5579b4ebc39bf.png\" alt=\"\" /><span style=\"line-height:1.53846154;\"></span> \r\n</div>\r\n<p>\r\n <br />\r\n</p>', 0, 0, 1433509583, 1434039807, 0, 1);
INSERT INTO `ly_manual_page` VALUES (16, 2, 1, 1, 0, '菜单管理', '<p style=\"text-align:justify;text-indent:24px;\">\r\n  在传统系统开发中，后台菜单都写入在HTML模版中，开发者进行开发添加新功能需要在原有界面上添加新菜单或者调整原油菜单的结构时必须手动更改HTML模版代码，这么做不但效率低下而且成本很高。考虑到这点本系统采取把后台菜单写入一张数据表(ct_system_menu)的方案。\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 新增菜单实现如下（以新建顶级菜单“其它”为例）：\r\n</p>\r\n<p style=\"text-align:justify;\">\r\n 1）填写新建菜单信息\r\n</p>\r\n<p style=\"text-align:center;\">\r\n  <img src=\"/Uploads/2015-07-22/55af0ceb5d89f.png\" width=\"800\" alt=\"\" /> \r\n</p>\r\n<p style=\"text-align:left;\">\r\n <br />\r\n</p>\r\n<p style=\"text-align:justify;\">\r\n 2）读取菜单并显示\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n 访问后台系统时系统会从数据库读取菜单项目并显示，这一步实际上也是AdminController的继登陆检测、权限检测、配置读取后的第四步操作。\r\n</p>\r\n<div style=\"text-align:center;\">\r\n <img src=\"/Uploads/2015-07-22/55af0d0393126.png\" width=\"800\" alt=\"\" />\r\n</div>\r\n<p style=\"text-align:justify;text-indent:24px;font-size:12px;font-family:Times;\">\r\n <span style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;line-height:1.42857143;\"><br />\r\n</span>\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;font-size:12px;font-family:Times;\">\r\n  <span style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;line-height:1.42857143;\">\r\n  <p style=\"text-align:justify;text-indent:24px;\">\r\n    相关代码片段如下：\r\n </p>\r\n  <p style=\"text-align:justify;text-indent:24px;\">\r\n<pre class=\"prettyprint lang-php\">     //获取系统菜单导航\r\n        $map[\'status\'] = array(\'eq\', 1);\r\n        if(!C(\'DEVELOP_MODE\')){ //是否开启开发者模式\r\n            $map[\'dev\'] = array(\'neq\', 1);\r\n        }\r\n        $tree = new \\Common\\Util\\Tree();\r\n        $all_admin_menu_list = $tree-&gt;list_to_tree(D(\'SystemMenu\')-&gt;where($map)-&gt;select()); //所有系统菜单\r\n\r\n        //设置数组key为菜单ID\r\n        foreach($all_admin_menu_list as $key =&gt; $val){\r\n            $all_menu_list[$val[\'id\']] = $val;\r\n        }\r\n\r\n        //获取功能模块的后台菜单列表\r\n        $moule_list = D(\'StoreModule\')-&gt;where(array(\'status\' =&gt; 1))-&gt;select(); //获取所有安装并启用的功能模块\r\n        $all_module_menu_list = array();\r\n        foreach($moule_list as $key =&gt; $val){\r\n            $menu_list_item = $tree-&gt;list_to_tree(json_decode($val[\'admin_menu\'], true));\r\n            $all_module_menu_list[] = $menu_list_item[0];\r\n        }\r\n\r\n        //设置数组key为菜单ID\r\n        foreach($all_module_menu_list as &amp;$menu){\r\n            $new_all_module_menu_list[$menu[\'id\']] = $menu;\r\n        }\r\n\r\n        //合并系统核心菜单与功能模块菜单\r\n        if($new_all_module_menu_list){\r\n            $all_menu_list += $new_all_module_menu_list;\r\n        }\r\n\r\n        $current_menu = D(\'SystemMenu\')-&gt;getCurrentMenu(); //当前菜单\r\n        $parent_menu = D(\'SystemMenu\')-&gt;getParentMenu($current_menu[\'id\']); //获取面包屑导航\r\n        foreach($parent_menu as $key =&gt; $val){\r\n            $parent_menu_id[] = $val[\'id\'];\r\n        }\r\n        $current_root_menu = D(\'SystemMenu\')-&gt;getRootMenuById($current_menu[\'id\']); //当前菜单的顶级菜单\r\n        $side_menu_list = $all_menu_list[$current_root_menu[\'id\']][\'_child\']; //左侧菜单\r\n\r\n        $this-&gt;assign(\'__ALL_MENU_LIST__\', $all_menu_list); //所有菜单\r\n        $this-&gt;assign(\'__SIDE_MENU_LIST__\', $side_menu_list); //左侧菜单\r\n        $this-&gt;assign(\'__PARENT_MENU__\', $parent_menu); //当前菜单的所有父级菜单\r\n        $this-&gt;assign(\'__PARENT_MENU_ID__\', $parent_menu_id); //当前菜单的所有父级菜单的ID\r\n        $this-&gt;assign(\'__CURRENT_ROOTMENU__\', $current_root_menu[\'id\']); //当前主菜单\r\n        $this-&gt;assign(\'__USER__\', session(\'user_auth\')); //用户登录信息</pre>\r\n  </p>\r\n</span>\r\n</p>', 0, 0, 1433509583, 1437703811, 0, 1);
INSERT INTO `ly_manual_page` VALUES (17, 2, 1, 1, 0, '配置管理', '<p style=\"text-align:justify;text-indent:24px;\">\r\n  在前边本系统已经实现了管理员后台修改配置并生效的功能，然而这是远远不够的，作为一套解决方案框架，开发者在使用本系统时必然有着添加更多设置的需求，比如添加一个公司地址配置。配置管理的设计思路类似于菜单管理，因为这两者都是为了开发者二次开发服务的。而配置的多样性对管理提出了较高的要求，不过由于本系统实现了Builder机制，因此理论上Builder支持的表单类别配置管理都可以使用。\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  新增配置并且调用的步骤如下：\r\n</p>\r\n<p style=\"text-align:justify;\">\r\n 1）填写新建配置信息\r\n</p>\r\n<p>\r\n <img src=\"/Uploads/2015-07-22/55af0ab93fa0e.png\" width=\"800\" alt=\"\" />\r\n</p>\r\n<p>\r\n <p style=\"text-align:justify;text-indent:24px;\">\r\n    相关代码片段如下：\r\n </p>\r\n<pre class=\"prettyprint lang-php\">    /**\r\n     * 新增配置\r\n     * @author jry &lt;598821125@qq.com&gt;\r\n     */\r\n    public function add(){\r\n        if(IS_POST){\r\n            $config_object = D(\'SystemConfig\');\r\n            $data = $config_object-&gt;create();\r\n            if($data){\r\n                if($config_object-&gt;add()){\r\n                    S(\'DB_CONFIG_DATA\',null);\r\n                    $this-&gt;success(\'新增成功\', U(\'index\'));\r\n                }else{\r\n                    $this-&gt;error(\'新增失败\');\r\n                }\r\n            }else{\r\n                $this-&gt;error($config_object-&gt;getError());\r\n            }\r\n        }else{\r\n            //使用FormBuilder快速建立表单页面。\r\n            $builder = new \\Common\\Builder\\FormBuilder();\r\n            $builder-&gt;title(\'新增配置\')  //设置页面标题\r\n                    -&gt;setUrl(U(\'add\')) //设置表单提交地址\r\n                    -&gt;addItem(\'group\', \'select\', \'配置分组\', \'配置所属的分组\', C(\'CONFIG_GROUP_LIST\'))\r\n                    -&gt;addItem(\'type\', \'select\', \'配置类型\', \'配置类型的分组\', C(\'FORM_ITEM_TYPE\'))\r\n                    -&gt;addItem(\'name\', \'text\', \'配置名称\', \'配置名称\')\r\n                    -&gt;addItem(\'title\', \'text\', \'配置标题\', \'配置标题\')\r\n                    -&gt;addItem(\'value\', \'textarea\', \'配置值\', \'配置值\')\r\n                    -&gt;addItem(\'options\', \'textarea\', \'配置项\', \'如果是单选、多选、下拉等类型 需要配置该项\')\r\n                    -&gt;addItem(\'tip\', \'textarea\', \'配置说明\', \'配置说明\')\r\n                    -&gt;addItem(\'sort\', \'num\', \'排序\', \'用于显示的顺序\')\r\n                    -&gt;display();\r\n        }\r\n    }</pre>\r\n <p style=\"text-align:justify;font-size:12px;font-family:Times;\">\r\n    <span style=\"line-height:1.42857143;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n    <p style=\"text-align:justify;\">\r\n     2）前台调用该配置\r\n   </p>\r\n    <p style=\"text-align:justify;text-indent:24px;\">\r\n      前台在需要显示该配置的HTML处添加C(‘ADDRESS’)即可。\r\n   </p>\r\n</span>\r\n </p>\r\n</p>', 0, 0, 1433509583, 1437704084, 0, 1);
INSERT INTO `ly_manual_page` VALUES (18, 2, 1, 1, 0, '插件列表', '<p style=\"text-align:justify;text-indent:24px;\">\r\n  一个系统的完善度不仅仅体现在系统本身功能的完善度，更要体现在是不是可扩展，本系统参考OneThink的插件机制实现了一套完整的插件管理运行系统。\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  插件的工作原理是，当系统接收到HTPP请求开始执行时，首先从数据表ct_addon_hook读取但前所有的钩子（钩子是挂载插件的容器，一个钩子可以挂在多个插件），接着根据钩子表的 addon字段读取每个钩子当前挂载的插件，然后根据插件名定位到各个插件的目录并找到插件类执行其中对应的以钩子名称命名的方法。\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  而一个插件真正开始执行实际上是通过ThinkPHP的行为扩展机制实现的。\r\n</p>\r\n<p style=\"text-align:justify;text-indent:24px;\">\r\n  插件相关调用步骤如下：\r\n</p>\r\n<p style=\"text-align:justify;\">\r\n  1）在action_begin标签位置定义一个初始化钩子行为。\r\n</p>\r\n<p style=\"text-align:justify;text-indent:21px;font-size:10.5px;\">\r\n  return array(\r\n</p>\r\n<p style=\"text-align:justify;text-indent:21px;font-size:10.5px;\">\r\n  &nbsp; &nbsp; \'action_begin\'=&gt;array(\'Common\\Behavior\\InitHookBehavior\')\r\n</p>\r\n<p style=\"text-align:justify;text-indent:21px;font-size:10.5px;\">\r\n );\r\n</p>\r\n<p style=\"text-align:justify;\">\r\n 2）在Common\\<span style=\"font-size:10.5px;\">Behavior</span>下定义InitHookBehavior.class.php。\r\n</p>\r\n<pre class=\"prettyprint lang-php\">namespace Common\\Behavior;\r\nuse Think\\Behavior;\r\nuse Think\\Hook;\r\ndefined(\'THINK_PATH\') or exit();\r\n/**\r\n * 初始化钩子信息\r\n * @author jry &lt;598821125@qq.com&gt;\r\n */\r\nclass InitHookBehavior extends Behavior{\r\n    /**\r\n     * 行为扩展的执行入口必须是run\r\n     * @author jry &lt;598821125@qq.com&gt;\r\n     */\r\n    public function run(&amp;$content){\r\n        if(defined(\'BIND_MODULE\') &amp;&amp; BIND_MODULE === \'Install\') return;\r\n        $data = S(\'hooks\');\r\n        if(!$data){\r\n            $hooks = D(\'AddonHook\')-&gt;getField(\'name,addons\');\r\n            foreach($hooks as $key =&gt; $value){\r\n                if($value){\r\n                    $map[\'status\']  =   1;\r\n                    $names          =   explode(\',\',$value);\r\n                    $map[\'name\']    =   array(\'IN\',$names);\r\n                    $data = D(\'Addon\')-&gt;where($map)-&gt;getField(\'id,name\');\r\n                    if($data){\r\n                        $addons = array_intersect($names, $data);\r\n                        Hook::add($key, array_map(\'get_addon_class\', $addons));\r\n                    }\r\n                }\r\n            }\r\n            S(\'hooks\', Hook::get());\r\n        }else{\r\n            Hook::import($data,false);\r\n        }\r\n    }\r\n}</pre>\r\n<br />', 0, 0, 1433509583, 1437704178, 0, 1);
INSERT INTO `ly_manual_page` VALUES (19, 2, 1, 1, 0, '数据备份', '<p style=\"text-align:justify;text-indent:24px;\">\r\n  随着计算机的普及和信息技术的进步，特别是计算机网络的飞速发展，信息安全的重要性日趋明显，但是，作为为信息安全的一个重要内容——数据备份的重要性却往往被忽视。只要发生数据传输、数据存储和数据交换，就有可能产生数据故障。这时，如果没有采取数据备份和数据恢复手段与措施，就会导致数据的丢失。任何时候数据的价值都是无法估量的，如果一个系统没有完善的数据备份机制，那么在数据意外丢失后，有时造成的损失是无法弥补与估量的。因此本系统实现了数据库备份的后台功能。\r\n</p>\r\n<p>\r\n <img src=\"/Uploads/2015-07-22/55af16239d992.png\" width=\"800\" alt=\"\" />\r\n</p>\r\n<p>\r\n <p style=\"text-align:justify;text-indent:24px;\">\r\n    相关实现代码如下：\r\n </p>\r\n  <div>\r\n<pre class=\"prettyprint lang-php\">/**\r\n     * 备份数据库\r\n     * @param  String  $tables 表名\r\n     * @param  Integer $id     表ID\r\n     * @param  Integer $start  起始行数\r\n     * @author jry &lt;598821125@qq.com&gt;\r\n     */\r\n    public function do_export($tables = null, $id = null, $start = null){\r\n        if(IS_POST &amp;&amp; !empty($tables) &amp;&amp; is_array($tables)){ //初始化\r\n            $path = self::$backup_path;\r\n            if(!is_dir($path)){\r\n                mkdir($path, 0755, true);\r\n            }\r\n             //生成备份文件信息\r\n            $file = array(\r\n                \'name\' =&gt; date(\'Ymd-His\', NOW_TIME),\r\n                \'part\' =&gt; 1,\r\n            );\r\n            session(\'backup_file\', $file);\r\n            //缓存要备份的表\r\n            session(\'backup_tables\', $tables);\r\n            //创建备份文件\r\n            $Database = new Database($file, $config);\r\n            if(false !== $Database-&gt;create()){\r\n                $tab = array(\'id\' =&gt; 0, \'start\' =&gt; 0);\r\n                $this-&gt;success(\'初始化成功！\', \'\', array(\'tables\' =&gt; $tables, \'tab\' =&gt; $tab));\r\n            }else{\r\n                $this-&gt;error(\'初始化失败，备份文件创建失败！\');\r\n            }\r\n        } elseif (IS_GET &amp;&amp; is_numeric($id) &amp;&amp; is_numeric($start)) { //备份数据\r\n            $tables = session(\'backup_tables\');\r\n            //备份指定表\r\n            $Database = new Database(session(\'backup_file\'), session(\'backup_config\'));\r\n            $start  = $Database-&gt;backup($tables[$id], $start);\r\n            if(false === $start){ //出错\r\n                $this-&gt;error(\'备份出错！\');\r\n            }elseif (0 === $start) { //下一表\r\n                if(isset($tables[++$id])){\r\n                    $tab = array(\'id\' =&gt; $id, \'start\' =&gt; 0);\r\n                    $this-&gt;success(\'备份完成！\', \'\', array(\'tab\' =&gt; $tab));\r\n                }else{ //备份完成，清空缓存\r\n                    unlink(session(\'backup_config.path\') . \'backup.lock\');\r\n                    session(\'backup_tables\', null);\r\n                    session(\'backup_file\', null);\r\n                    session(\'backup_config\', null);\r\n                    $this-&gt;success(\'备份完成！\');\r\n                }\r\n            }else{\r\n                $tab  = array(\'id\' =&gt; $id, \'start\' =&gt; $start[0]);\r\n                $rate = floor(100 * ($start[0] / $start[1]));\r\n                $this-&gt;success(\"正在备份…({$rate}%)\",\'\',array(\'tab\' =&gt; $tab));\r\n            }\r\n        }else{ //出错\r\n            $this-&gt;error(\'参数错误！\');\r\n        }\r\n    }</pre>\r\n<br />\r\n  </div>\r\n</p>', 0, 0, 1433509583, 1437704260, 0, 1);
INSERT INTO `ly_manual_page` VALUES (20, 2, 1, 1, 0, '数据还原', '<p style=\"text-align:justify;text-indent:24px;\">\r\n  数据还原是数据备份的反向操作，数据备份是将数据库的内容复制一份存储到其他位置，数据还原即是将数据库从备份文件还原到数据库。数据还原是在发生数据丢失的情况下数据快速恢复的重要保证\r\n</p>\r\n<p>\r\n <img src=\"/Uploads/2015-07-22/55af20bb88557.png\" width=\"800\" alt=\"\" />\r\n</p>\r\n<p>\r\n <span style=\"line-height:1.42857143;\">相关实现代码如下：</span>\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-php\">    /**\r\n     * 还原数据库\r\n     * @author jry &lt;598821125@qq.com&gt;\r\n     */\r\n    public function do_import($time = 0, $part = null, $start = null){\r\n        if(is_numeric($time) &amp;&amp; is_null($part) &amp;&amp; is_null($start)){ //初始化\r\n            //获取备份文件信息\r\n            $name  = date(\'Ymd-His\', $time) . \'-*.sql*\';\r\n            $path  = realpath(self::$backup_path) . DIRECTORY_SEPARATOR . $name;\r\n            $files = glob($path);\r\n            $list  = array();\r\n            foreach($files as $name){\r\n                $basename = basename($name);\r\n                $match    = sscanf($basename, \'%4s%2s%2s-%2s%2s%2s-%d\');\r\n                $gz = preg_match(\'/^\\d{8,8}-\\d{6,6}-\\d+\\.sql.gz$/\', $basename);\r\n                $list[$match[6]] = array($match[6], $name, $gz);\r\n            }\r\n            ksort($list);\r\n            //检测文件正确性\r\n            $last = end($list);\r\n            if(count($list) === $last[0]){\r\n                session(\'backup_list\', $list); //缓存备份列表\r\n                $this-&gt;success(\'初始化完成\',\'\',array(\'part\' =&gt; 1, \'start\' =&gt; 0));\r\n            }else{\r\n                $this-&gt;error(\'备份文件可能已经损坏，请检查！\');\r\n            }\r\n        }elseif(is_numeric($part) &amp;&amp; is_numeric($start)) {\r\n            $list  = session(\'backup_list\');\r\n            $db = new Database($list[$part], array(\r\n                \'path\' =&gt; realpath($this-&gt;backup_path) . DIRECTORY_SEPARATOR,\r\n                \'compress\' =&gt; $list[$part][2]));\r\n            $start = $db-&gt;import($start);\r\n            if(false === $start){\r\n                $this-&gt;error(\'还原数据出错！\');\r\n            }elseif(0 === $start) { //下一卷\r\n                if(isset($list[++$part])){\r\n                    $data = array(\'part\' =&gt; $part, \'start\' =&gt; 0);\r\n                    $this-&gt;success(\"正在还原...#{$part}\", \'\', $data);\r\n                }else{\r\n                    session(\'backup_list\', null);\r\n                    $this-&gt;success(\'还原完成！\');\r\n                }\r\n            }else{\r\n                $data = array(\'part\' =&gt; $part, \'start\' =&gt; $start[0]);\r\n                if($start[1]){\r\n                    $rate = floor(100 * ($start[0] / $start[1]));\r\n                    $this-&gt;success(\"正在还原...#{$part} ({$rate}%)\", \'\', $data);\r\n                }else{\r\n                    $data[\'gz\'] = 1;\r\n                    $this-&gt;success(\"正在还原...#{$part}\", \'\', $data);\r\n                }\r\n            }\r\n        }else{\r\n            $this-&gt;error(\'参数错误！\');\r\n        }\r\n    }</pre>\r\n</p>', 0, 0, 1433509583, 1437704336, 0, 1);

CREATE TABLE `ly_manual_member` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `data_id` int(11) DEFAULT NULL COMMENT 'git仓库',
  `uid` int(11) unsigned NOT NULL DEFAULT '0' COMMENT 'UID',
  `create_time` int(11) NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(11) NOT NULL DEFAULT '0' COMMENT '修改时间',
  `status` tinyint(3) NOT NULL DEFAULT '0' COMMENT '状态',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='手册成员表';

CREATE TABLE `ly_manual_ad` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `name` varchar(63) NOT NULL DEFAULT '' COMMENT '名称',
  `title` varchar(63) NOT NULL DEFAULT '' COMMENT '标题',
  `type` tinyint(1) unsigned NOT NULL COMMENT '类型',
  `value` text NOT NULL COMMENT '广告内容',
  `url` text NOT NULL COMMENT '链接',
  `create_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT '状态',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='广告表';

INSERT INTO `ly_manual_ad` (`id`, `name`, `title`, `type`, `value`, `url`, `create_time`, `update_time`, `status`)
VALUES
  (1, 'detail_before', '章节内容顶部', 3, '<script type=\"text/javascript\">\r\n    /*600*70 创建于 2016/12/1*/\r\n    var cpro_id = \"u2834672\";\r\n</script>\r\n<script type=\"text/javascript\" src=\"http://cpro.baidustatic.com/cpro/ui/c.js\"></script>', '', 1480578093, 1480578093, 1),
  (2, 'detail_after', '章节内容底部', 3, '<script type=\"text/javascript\">\r\n    /*600*70 创建于 2016/12/1*/\r\n    var cpro_id = \"u2834672\";\r\n</script>\r\n<script type=\"text/javascript\" src=\"http://cpro.baidustatic.com/cpro/ui/c.js\"></script>', '', 1480578093, 1480578093, 1);
